{"version":3,"sources":["components/common/Header.tsx","components/SearchBar/searchParams.tsx","components/common/Utils/index.tsx","components/SearchBar/index.tsx","components/ResultsPage/index.tsx","components/LandingPage/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["Header","react_default","a","createElement","className","href","paramsStyle","fontSize","paddingTop","SearchParams","props","displayParams","params","map","item","index","concat","react","style","planetAttrList","data","arr","_i2","_Object$entries","Object","entries","Attributes","length","atr","push","planetUnitsList","_i3","_Object$entries2","Units","units","options","_i","_Object$keys","keys","name","filter","planetNames","planets","value","label","general","searchTypeArr","SearchBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","setState","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","_this$props","show","changeSearchState","setPlanet","_this$state","searchType","wrap","_context","prev","next","preventDefault","state","stop","_x","apply","arguments","handleTabClick","searchState","_this$props2","changeParams","tabClassName","displayLabels","_this$state2","key","htmlFor","onClick","bind","assertThisInitialized","handleClickOutside","event","domNode","ReactDOM","findDOMNode","hide","contains","target","_this$state3","selectStyles","menu","styles","objectSpread","zIndex","opacity","onSubmit","react_select_esm","id","onChange","placeholder","type","searchParams","React","ResultsPage","resultsVis","planet","paramsKey","resultsPageStyles","planetsDisplay","LandingPage","resultVis","hideResults","showResults","changeSearchParams","val","bool","generalAttr","generalUnits","massAttr","massUnits","orbitsAttr","orbitsUnits","tempAttr","tempUnits","extraAttr","extraUnits","SearchBar_SearchBar","components_ResultsPage","App","common_Header","components_LandingPage","Boolean","window","location","hostname","match","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8e3913a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './header.style.scss';\n\nconst Header: React.FC = () => {\n  \n  return (\n    <section className=\"header\">\n      <a className=\"home__icon\" href=\"placeholder-home\">realuniverse.com</a>\n      <div className=\"header__tabs\">\n        <a href=\"https://en.wikipedia.org/wiki/List_of_gravitationally_rounded_objects_of_the_Solar_System#Planets\">link to data source</a>\n      </div>\n    </section>\n  );\n}\n\nexport default Header;","import * as React from 'react';\n\n\n// type searchProps = {\n//   distance: number,\n//   radius: number,\n//   surfaceArea: number,\n//   volume: number,\n//   mass: number,\n//   gravityParameter: number,\n//   density: number,\n//   gravity: number,\n//   escapeVelocity: number,\n//   rotationPeriod: number,\n//   orbitalPeriod: number,\n//   orbitalSpeed: number,\n//   inclination: number,\n//   axialTilt: number,\n//   surfaceTemperature: number,\n//   airTemperature: number,\n//   airContent: string,\n//   numberOfMoons: number,\n//   rings: string\n// }\n\ntype ParamsProps = {\n  searchType: string,\n  params: string[],\n}\n\nconst paramsStyle = {\n  fontSize: '0.8em',\n  paddingTop: '1em'\n};\n\nconst SearchParams: React.FC<ParamsProps> = (props) => {\n\n  const { params } = props;\n\n  const displayParams = params.map((item, index) => {\n    return (` ${item} |`)\n  })\n\n  return (\n    <section style={paramsStyle }>\n      Displays: {displayParams}\n    </section>\n  );\n\n\n  \n}\n\nexport default SearchParams; ","export function planetNames(data: object) {\n  let arr = [];\n  for (let name of Object.keys(data)) {\n    arr.push(name);\n  }\n  return arr.filter((item, index) => index > 1 ? item : null);\n};\n\nexport function planetAttrList(data: any) {\n  let arr = [];\n  for (let atr of Object.entries(data.Attributes)) {\n    arr.push(atr[1]);\n  }\n  return arr;\n}\n\nexport function planetUnitsList(data: any) {\n  let arr = [];\n  for (let units of Object.entries(data.Units)) {\n    arr.push(units[1]);\n  }\n  return arr;\n}\n\n\n\n\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\n\nimport SearchParams from './searchParams';\nimport { planetNames } from '../common/Utils';\nimport planets from '../../assets/planetData.json';\n\nimport './search-bar.style.scss';\n\ninterface searchState {\n  value: string,\n  searchType: string,\n  tabClassName: string,\n  data: object,\n  selectedOption: any,\n}\n\ninterface searchProps {\n  show: any,\n  hide: any,\n  changeSearchState: any,\n  changeParams: any, \n  params: string[],\n  setPlanet: any,\n}\n\nconst options = planetNames(planets).map((item) => {\n  return {value: item, label: item};\n});\n\nconst general: string = 'general';\nconst mass: string = 'mass';\nconst orbits: string = 'orbits';\nconst temp: string = 'temp & tilt';\nconst extra: string = 'extra';\n\nconst searchTypeArr: string[] = [general, mass, orbits, temp, extra];\n\nexport default class SearchBar extends React.Component<searchProps, searchState> {\n  constructor(props: searchProps){\n    super(props);\n\n    this.state = {\n      value: '',\n      searchType: general,\n      tabClassName: '',\n      data: planets,\n      selectedOption: null\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (selectedOption: any) => {\n    this.setState({ selectedOption });\n  }\n\n  handleSubmit = async ( e: React.FormEvent<HTMLFormElement> ): Promise<void> => {\n    e.preventDefault();\n    const { show, changeSearchState, setPlanet } = this.props;\n    const { searchType, selectedOption } = this.state;\n    changeSearchState(searchType);\n    setPlanet(selectedOption)\n    show();\n  }\n\n  handleTabClick = (searchState: string, item: string) => {\n    const { changeSearchState, changeParams } = this.props;\n    changeSearchState(item);\n    changeParams(item);\n    this.setState({ searchType: item });\n    this.setState({ tabClassName: 'active' })\n  }\n\n  displayLabels = () => {\n    const { searchType, tabClassName } = this.state;\n    return searchTypeArr.map((item, index, arr)=> {\n      return <label \n        key={index}\n        className={item === searchType ? tabClassName : ''}\n        htmlFor=\"search__bar\"\n        onClick={this.handleTabClick.bind(this, searchType, item)}\n      >\n        {item}\n      </label>\n    });\n  };\n\n  // componentWillMount(){\n  //   document.addEventListener('mousedown', this.handleClickOutside, false)\n  // }\n\n  // componentWillUnmount(){\n  //   document.removeEventListener('mousedown', this.handleClickOutside, false)\n  // }\n\n  handleClickOutside = (event: any) => {\n    const domNode = ReactDOM.findDOMNode(this);\n    const { hide } = this.props;\n    if (!domNode || !domNode.contains(event.target)) {\n        hide();\n        this.setState({ selectedOption: null })\n    }\n  }\n\n  render() {\n    const { selectedOption, searchType } = this.state;\n    const { params } = this.props;\n\n    const selectStyles: object = { menu: (styles: object) => ({ ...styles, zIndex: 999, opacity: 1 }) };\n\n    return (\n      <section className=\"search\">\n        <form className=\"search__form\" onSubmit={this.handleSubmit}>\n          <div className=\"search__labels\">\n            {this.displayLabels()}\n          </div>\n          <Select\n            id=\"search__bar\"\n            className=\"search__bar\"\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n            placeholder=\"find your planet...\"\n            style={selectStyles}\n          />\n          <input \n            className=\"search__btn\"\n            type=\"submit\" \n            value=\"Search\"\n          />\n        </form>\n        <SearchParams searchType={searchType} params={params}/>\n      </section>\n    );\n  }\n}","import * as React from 'react';\n\nimport data from '../../assets/planetData.json';\nimport './results-page.style.scss';\n\ninterface resultsProps {\n  resultsVis: boolean,\n  searchState: string,\n  planet: any,\n  params: string[],\n  paramsKey: any,\n  units: string[],\n}\n\nconst ResultsPage: React.FC <resultsProps> = (props) => {\n  const { resultsVis, planet, params, paramsKey, units } = props;\n  const resultsPageStyles = (() => resultsVis ? 'results-page' : 'no-results-page')();\n\n  interface Idata{\n    [key: string]: any,\n  }\n\n  const planetsDisplay = ((data: Idata) => {\n    return paramsKey.map((item: string, index: number) => {     \n      return <div key={item}>\n          {params[index]}: {data[planet][item]} {units[index]}\n        </div>;\n    })\n  })(data);\n\n  return (\n  <section className={resultsPageStyles}>\n    <h2>{planet}</h2>\n    <div>{planetsDisplay}</div>\n  </section>\n);\n  \n}\n\nexport default ResultsPage;","import * as React from 'react';\n\nimport SearchBar from '../SearchBar';\nimport ResultsPage from '../ResultsPage';\nimport { planetAttrList, planetUnitsList } from '../common/Utils';\nimport planets from '../../assets/planetData.json';\n\n\nimport './landing-page.style.scss';\n\ninterface landingState {\n  resultVis: boolean,\n  searchState: string,\n  params: any,\n  planet: string,\n  paramsKey: any,\n  units: any,\n}\n\nclass LandingPage extends React.Component<{}, landingState> {\n  constructor(props: any) {\n    super(props);\n    this.hideResults = this.hideResults.bind(this);\n    this.showResults = this.showResults.bind(this);\n    this.changeSearchState = this.changeSearchState.bind(this);\n    this.changeSearchParams = this.changeSearchParams.bind(this);\n    this.setPlanet = this.setPlanet.bind(this);\n  }\n\n  state = { \n    resultVis: false,\n    searchState: 'general',\n    params: ['Mean distance from the Sun', 'Equatorial radius', 'Surface area', 'Volume'],\n    planet: 'Earth',\n    paramsKey: ['C', 'D', 'E', 'F'],\n    units: ['km', 'km', 'km2', 'km3'],\n  }\n\n  setPlanet(val: any){\n    this.setState({ planet: val.value });\n  }\n\n  showResults(bool: boolean) {\n    this.setState({ resultVis: true });\n  }\n\n  hideResults(bool: boolean) {\n    this.setState({ resultVis: false });\n  }\n\n  changeSearchState(val: string) {\n    this.setState({ searchState: val });\n  }\n\n  changeSearchParams(val: string){\n    const general: string = 'general';\n    const mass: string = 'mass';\n    const orbits: string = 'orbits';\n    const temp: string = 'temp & tilt';\n    const extra: string = 'extra';\n\n    switch(val) {\n      case general: \n        let generalAttr = planetAttrList(planets).filter((item,index) => index < 4);\n        let generalUnits = planetUnitsList(planets).filter((item,index) => index < 4);\n        this.setState({ params: generalAttr, units: generalUnits, paramsKey: ['C', 'D', 'E', 'F'] });\n        break;\n      case mass:\n        let massAttr = planetAttrList(planets).filter((item,index) => index > 3 && index < 8);\n        let massUnits = planetUnitsList(planets).filter((item,index) => index > 3 && index < 8);\n        this.setState({ params: massAttr, units: massUnits, paramsKey: ['G', 'H', 'I', 'J'] });\n        break;\n      case orbits:\n        let orbitsAttr = planetAttrList(planets).filter((item,index) => index > 7 && index < 12);\n        let orbitsUnits = planetUnitsList(planets).filter((item,index) => index > 7 && index < 12);\n        this.setState({ params: orbitsAttr, units: orbitsUnits, paramsKey: ['K', 'L', 'M', 'N'] });\n        break;\n      case temp:\n        let tempAttr = planetAttrList(planets).filter((item,index) => index > 11 && index < 16);\n        let tempUnits = planetUnitsList(planets).filter((item,index) => index > 11 && index < 16);\n        this.setState({ params: tempAttr, units: tempUnits, paramsKey: ['O', 'P', 'Q', 'R'] });\n        break;\n      case extra:\n        let extraAttr = planetAttrList(planets).filter((item,index) => index > 15 && index < 19);\n        let extraUnits = planetUnitsList(planets).filter((item,index) => index > 15 && index < 19);\n        this.setState({ params: extraAttr, units: extraUnits, paramsKey: ['S', 'T', 'U']  });\n        break;\n      default: \n        this.setState({ \n          params: ['Mean distance from the Sun', 'Equatorial radius', 'Surface area', 'Volume'], \n          paramsKey: ['C', 'D', 'E', 'F'],\n          units: ['km', 'km', 'km2', 'km3'],\n          });\n        break;\n    }\n  }\n\n  render(){\n    const { resultVis, searchState, params, paramsKey, planet, units } = this.state;\n    return (\n      <section className=\"landing-page\">\n\n        <h1>Find your place among the stars</h1>\n    \n        <SearchBar \n          hide={this.hideResults} \n          show={this.showResults} \n          changeSearchState={this.changeSearchState} \n          changeParams={this.changeSearchParams}\n          params={params}\n          setPlanet={this.setPlanet}\n        />\n        <ResultsPage \n          resultsVis={resultVis} \n          searchState={searchState} \n          planet={planet}\n          params={params}\n          paramsKey={paramsKey}\n          units={units}\n        />  \n    \n      </section>\n    );\n  }\n  \n};\nexport default LandingPage;","import React from 'react';\nimport Header from '../common/Header';\nimport './App.scss';\nimport LandingPage from '../LandingPage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <LandingPage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}