{"version":3,"sources":["components/common/Header.tsx","components/SearchBar/searchParams.tsx","components/common/Utils/index.tsx","components/SearchBar/index.tsx","components/ResultsPage/index.tsx","components/LandingPage/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["Header","react_default","a","createElement","className","href","paramsStyle","fontSize","paddingTop","SearchParams","props","displayParams","params","map","item","index","concat","react","style","planetAttrList","data","arr","_i2","_Object$entries","Object","entries","Attributes","length","atr","push","planetUnitsList","_i3","_Object$entries2","Units","units","options","_i","_Object$keys","keys","name","filter","planetNames","planets","value","label","general","searchTypeArr","SearchBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","setState","console","log","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","_this$props","show","changeSearchState","setPlanet","_this$state","searchType","wrap","_context","prev","next","preventDefault","state","stop","_x","apply","arguments","handleTabClick","searchState","_this$props2","changeParams","tabClassName","displayLabels","_this$state2","key","htmlFor","onClick","bind","assertThisInitialized","handleClickOutside","event","domNode","ReactDOM","findDOMNode","hide","contains","target","document","addEventListener","removeEventListener","_this$state3","selectStyles","menu","styles","objectSpread","zIndex","opacity","onSubmit","react_select_esm","id","onChange","placeholder","type","searchParams","React","ResultsPage","resultsVis","planet","paramsKey","resultsPageStyles","planetsDisplay","LandingPage","resultVis","hideResults","showResults","changeSearchParams","val","bool","generalAttr","generalUnits","massAttr","massUnits","orbitsAttr","orbitsUnits","tempAttr","tempUnits","extraAttr","extraUnits","SearchBar_SearchBar","components_ResultsPage","App","common_Header","components_LandingPage","Boolean","window","location","hostname","match","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"shKAgBeA,eAZU,WAEvB,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaC,KAAK,oBAA/B,oBACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,qGAAR,uHCoBFC,EAAc,CAClBC,SAAU,QACVC,WAAY,OAqBCC,EAlB6B,SAACC,GAAU,IAI/CC,EAFaD,EAAXE,OAEqBC,IAAI,SAACC,EAAMC,GACtC,UAAAC,OAAYF,EAAZ,QAGF,OACEG,EAAA,yBAASC,MAAOZ,GAAhB,aACaK,ICrCV,SAASQ,EAAeC,GAE7B,IADA,IAAIC,EAAM,GACVC,EAAA,EAAAC,EAAgBC,OAAOC,QAAQL,EAAKM,YAApCJ,EAAAC,EAAAI,OAAAL,IAAiD,CAA5C,IAAIM,EAAGL,EAAAD,GACVD,EAAIQ,KAAKD,EAAI,IAEf,OAAOP,EAGF,SAASS,EAAgBV,GAE9B,IADA,IAAIC,EAAM,GACVU,EAAA,EAAAC,EAAkBR,OAAOC,QAAQL,EAAKa,OAAtCF,EAAAC,EAAAL,OAAAI,IAA8C,CAAzC,IAAIG,EAAKF,EAAAD,GACZV,EAAIQ,KAAKK,EAAM,IAEjB,OAAOb,aCMHc,SD3BC,SAAqBf,GAE1B,IADA,IAAIC,EAAM,GACVe,EAAA,EAAAC,EAAiBb,OAAOc,KAAKlB,GAA7BgB,EAAAC,EAAAV,OAAAS,IAAoC,CAA/B,IAAIG,EAAIF,EAAAD,GACXf,EAAIQ,KAAKU,GAEX,OAAOlB,EAAImB,OAAO,SAAC1B,EAAMC,GAAP,OAAiBA,EAAQ,EAAID,EAAO,OCsBxC2B,CAAYC,GAAS7B,IAAI,SAACC,GACxC,MAAO,CAAC6B,MAAO7B,EAAM8B,MAAO9B,MAGxB+B,EAAkB,UAMlBC,EAA0B,CAACD,EALZ,OACE,SACF,cACC,SAIDE,cACnB,SAAAA,EAAYrC,GAAmB,IAAAsC,EAAA,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAA0B,KAAAH,IAC7BC,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA0B,KAAA1B,OAAA4B,EAAA,EAAA5B,CAAAuB,GAAAM,KAAAH,KAAMxC,KAcR4C,aAAe,SAACC,GACdP,EAAKQ,SAAS,CAAED,mBAChBE,QAAQC,IAAR,mBAAgCH,IAjBHP,EAoB/BW,aApB+B,eAAAC,EAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,EAAA5D,EAAA6D,KAoBhB,SAAAC,EAAQC,GAAR,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhB,EAAA,OAAAO,EAAA5D,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbV,EAAEW,iBADWV,EAEkClB,EAAKtC,MAA5CyD,EAFKD,EAELC,KAAMC,EAFDF,EAECE,kBAAmBC,EAFpBH,EAEoBG,UAFpBC,EAG0BtB,EAAK6B,MAApCN,EAHKD,EAGLC,WAAYhB,EAHPe,EAGOf,eACpBa,EAAkBG,GAClBF,EAAUd,GACVY,IANa,wBAAAM,EAAAK,SAAAd,MApBgB,gBAAAe,GAAA,OAAAnB,EAAAoB,MAAA9B,KAAA+B,YAAA,GAAAjC,EA6B/BkC,eAAiB,SAACC,EAAqBrE,GAAiB,IAAAsE,EACVpC,EAAKtC,MAAzC0D,EAD8CgB,EAC9ChB,kBAAmBiB,EAD2BD,EAC3BC,aAC3BjB,EAAkBtD,GAClBuE,EAAavE,GACbkC,EAAKQ,SAAS,CAAEe,WAAYzD,IAC5BkC,EAAKQ,SAAS,CAAE8B,aAAc,YAlCDtC,EAqC/BuC,cAAgB,WAAM,IAAAC,EACiBxC,EAAK6B,MAAlCN,EADYiB,EACZjB,WAAYe,EADAE,EACAF,aACpB,OAAOxC,EAAcjC,IAAI,SAACC,EAAMC,EAAOM,GACrC,OAAOJ,EAAA,uBACLwE,IAAK1E,EACLX,UAAWU,IAASyD,EAAae,EAAe,GAChDI,QAAQ,cACRC,QAAS3C,EAAKkC,eAAeU,KAApBpE,OAAAqE,EAAA,EAAArE,CAAAwB,GAA+BuB,EAAYzD,IAEnDA,MA9CwBkC,EA2D/B8C,mBAAqB,SAACC,GACpB,IAAMC,EAAUC,IAASC,YAAT1E,OAAAqE,EAAA,EAAArE,CAAAwB,IACRmD,EAASnD,EAAKtC,MAAdyF,KACHH,GAAYA,EAAQI,SAASL,EAAMM,UACpCF,IACAnD,EAAKQ,SAAS,CAAED,eAAgB,SA7DpCP,EAAK6B,MAAQ,CACXlC,MAAO,GACP4B,WAAY1B,EACZyC,aAAc,GACdlE,KAAMsB,EACNa,eAAgB,MAGlBP,EAAKM,aAAeN,EAAKM,aAAasC,KAAlBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IACpBA,EAAKW,aAAeX,EAAKW,aAAaiC,KAAlBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IAZSA,oFAoD7BsD,SAASC,iBAAiB,YAAarD,KAAK4C,oBAAoB,kDAIhEQ,SAASE,oBAAoB,YAAatD,KAAK4C,oBAAoB,oCAY5D,IAAAW,EACgCvD,KAAK2B,MAApCtB,EADDkD,EACClD,eAAgBgB,EADjBkC,EACiBlC,WAChB3D,EAAWsC,KAAKxC,MAAhBE,OAEF8F,EAAuB,CAAEC,KAAM,SAACC,GAAD,OAAApF,OAAAqF,EAAA,EAAArF,CAAA,GAA0BoF,EAA1B,CAAkCE,OAAQ,IAAKC,QAAS,MAE7F,OACE9F,EAAA,yBAASb,UAAU,UACjBa,EAAA,sBAAMb,UAAU,eAAe4G,SAAU9D,KAAKS,cAC5C1C,EAAA,qBAAKb,UAAU,kBACZ8C,KAAKqC,iBAERtE,EAAA,cAACgG,EAAA,EAAD,CACEC,GAAG,cACH9G,UAAU,cACVuC,MAAOY,EACP4D,SAAUjE,KAAKI,aACfnB,QAASA,EACTiF,YAAY,sBACZlG,MAAOwF,IAETzF,EAAA,uBACEb,UAAU,cACViH,KAAK,SACL1E,MAAM,YAGV1B,EAAA,cAACqG,EAAD,CAAc/C,WAAYA,EAAY3D,OAAQA,YAhGf2G,aCCxBC,SA1B8B,SAAC9G,GAAU,IAQ7BU,EAPjBqG,EAAiD/G,EAAjD+G,WAAYC,EAAqChH,EAArCgH,OAAQ9G,EAA6BF,EAA7BE,OAAQ+G,EAAqBjH,EAArBiH,UAAWzF,EAAUxB,EAAVwB,MACzC0F,EAA2BH,EAAa,eAAiB,kBAMzDI,GAAmBzG,EAOtBA,EANMuG,EAAU9G,IAAI,SAACC,EAAcC,GAElC,OADA0C,QAAQC,IAAI9C,EAAOG,GAAQ,MAAOK,EAAKsG,GAAQ5G,IACxCG,EAAA,qBAAKwE,IAAK3E,GACZF,EAAOG,GADL,KACeK,EAAKsG,GAAQ5G,GAD5B,IACoCoB,EAAMnB,OAKrD,OACAE,EAAA,yBAASb,UAAWwH,GAClB3G,EAAA,wBAAKyG,GACLzG,EAAA,uBAAI4G,MC4FOC,qBA1Gb,SAAAA,EAAYpH,GAAY,IAAAsC,EAAA,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAA0B,KAAA4E,IACtB9E,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA0B,KAAA1B,OAAA4B,EAAA,EAAA5B,CAAAsG,GAAAzE,KAAAH,KAAMxC,KAQRmE,MAAQ,CACNkD,WAAW,EACX5C,YAAa,UACbvE,OAAQ,CAAC,6BAA8B,oBAAqB,eAAgB,UAC5E8G,OAAQ,QACRC,UAAW,CAAC,IAAK,IAAK,IAAK,KAC3BzF,MAAO,CAAC,KAAM,KAAM,MAAO,QAb3Bc,EAAKgF,YAAchF,EAAKgF,YAAYpC,KAAjBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IACnBA,EAAKiF,YAAcjF,EAAKiF,YAAYrC,KAAjBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IACnBA,EAAKoB,kBAAoBpB,EAAKoB,kBAAkBwB,KAAvBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IACzBA,EAAKkF,mBAAqBlF,EAAKkF,mBAAmBtC,KAAxBpE,OAAAqE,EAAA,EAAArE,CAAAwB,IAC1BA,EAAKqB,UAAYrB,EAAKqB,UAAUuB,KAAfpE,OAAAqE,EAAA,EAAArE,CAAAwB,IANKA,yEAkBdmF,GACRjF,KAAKM,SAAS,CAAEkE,OAAQS,EAAIxF,4CAGlByF,GACVlF,KAAKM,SAAS,CAAEuE,WAAW,wCAGjBK,GACVlF,KAAKM,SAAS,CAAEuE,WAAW,8CAGXI,GAChBjF,KAAKM,SAAS,CAAE2B,YAAagD,+CAGZA,GAOjB,OAAOA,GACL,IAPsB,UAQpB,IAAIE,EAAclH,EAAeuB,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IACrEuH,EAAexG,EAAgBY,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IAC3EmC,KAAKM,SAAS,CAAE5C,OAAQyH,EAAanG,MAAOoG,EAAcX,UAAW,CAAC,IAAK,IAAK,IAAK,OACrF,MACF,IAXmB,OAYjB,IAAIY,EAAWpH,EAAeuB,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,GAAKA,EAAQ,IAC/EyH,EAAY1G,EAAgBY,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,GAAKA,EAAQ,IACrFmC,KAAKM,SAAS,CAAE5C,OAAQ2H,EAAUrG,MAAOsG,EAAWb,UAAW,CAAC,IAAK,IAAK,IAAK,OAC/E,MACF,IAfqB,SAgBnB,IAAIc,EAAatH,EAAeuB,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,GAAKA,EAAQ,KACjF2H,EAAc5G,EAAgBY,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,GAAKA,EAAQ,KACvFmC,KAAKM,SAAS,CAAE5C,OAAQ6H,EAAYvG,MAAOwG,EAAaf,UAAW,CAAC,IAAK,IAAK,IAAK,OACnF,MACF,IAnBmB,cAoBjB,IAAIgB,EAAWxH,EAAeuB,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IAAMA,EAAQ,KAChF6H,EAAY9G,EAAgBY,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IAAMA,EAAQ,KACtFmC,KAAKM,SAAS,CAAE5C,OAAQ+H,EAAUzG,MAAO0G,EAAWjB,UAAW,CAAC,IAAK,IAAK,IAAK,OAC/E,MACF,IAvBoB,QAwBlB,IAAIkB,EAAY1H,EAAeuB,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IAAMA,EAAQ,KACjF+H,EAAahH,EAAgBY,GAASF,OAAO,SAAC1B,EAAKC,GAAN,OAAgBA,EAAQ,IAAMA,EAAQ,KACvFmC,KAAKM,SAAS,CAAE5C,OAAQiI,EAAW3G,MAAO4G,EAAYnB,UAAW,CAAC,IAAK,IAAK,OAC5E,MACF,QACEzE,KAAKM,SAAS,CACZ5C,OAAQ,CAAC,6BAA8B,oBAAqB,eAAgB,UAC5E+G,UAAW,CAAC,IAAK,IAAK,IAAK,KAC3BzF,MAAO,CAAC,KAAM,KAAM,MAAO,2CAM3B,IAAAoC,EAC+DpB,KAAK2B,MAAlEkD,EADFzD,EACEyD,UAAW5C,EADbb,EACaa,YAAavE,EAD1B0D,EAC0B1D,OAAQ+G,EADlCrD,EACkCqD,UAAWD,EAD7CpD,EAC6CoD,OAAQxF,EADrDoC,EACqDpC,MAC3D,OACEjB,EAAA,yBAASb,UAAU,gBAEjBa,EAAA,2DAEAA,EAAA,cAAC8H,EAAD,CACE5C,KAAMjD,KAAK8E,YACX7D,KAAMjB,KAAK+E,YACX7D,kBAAmBlB,KAAKkB,kBACxBiB,aAAcnC,KAAKgF,mBACnBtH,OAAQA,EACRyD,UAAWnB,KAAKmB,YAElBpD,EAAA,cAAC+H,EAAD,CACEvB,WAAYM,EACZ5C,YAAaA,EACbuC,OAAQA,EACR9G,OAAQA,EACR+G,UAAWA,EACXzF,MAAOA,YAnGSqF,cCLX0B,EATO,WACpB,OACEhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+I,EAAD,MACAjJ,EAAAC,EAAAC,cAACgJ,EAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNvD,IAASwD,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAASpD,SAASqD,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dd35c39c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './header.style.scss';\n\nconst Header: React.FC = () => {\n  \n  return (\n    <section className=\"header\">\n      <a className=\"home__icon\" href=\"placeholder-home\">realuniverse.com</a>\n      <div className=\"header__tabs\">\n        <a href=\"https://en.wikipedia.org/wiki/List_of_gravitationally_rounded_objects_of_the_Solar_System#Planets\">link to data source</a>\n      </div>\n    </section>\n  );\n}\n\nexport default Header;","import * as React from 'react';\n\n\n// type searchProps = {\n//   distance: number,\n//   radius: number,\n//   surfaceArea: number,\n//   volume: number,\n//   mass: number,\n//   gravityParameter: number,\n//   density: number,\n//   gravity: number,\n//   escapeVelocity: number,\n//   rotationPeriod: number,\n//   orbitalPeriod: number,\n//   orbitalSpeed: number,\n//   inclination: number,\n//   axialTilt: number,\n//   surfaceTemperature: number,\n//   airTemperature: number,\n//   airContent: string,\n//   numberOfMoons: number,\n//   rings: string\n// }\n\ntype ParamsProps = {\n  searchType: string,\n  params: string[],\n}\n\nconst paramsStyle = {\n  fontSize: '0.8em',\n  paddingTop: '1em'\n};\n\nconst SearchParams: React.FC<ParamsProps> = (props) => {\n\n  const { params } = props;\n\n  const displayParams = params.map((item, index) => {\n    return (` ${item} |`)\n  })\n\n  return (\n    <section style={paramsStyle }>\n      Displays: {displayParams}\n    </section>\n  );\n\n\n  \n}\n\nexport default SearchParams; ","export function planetNames(data: object) {\n  let arr = [];\n  for (let name of Object.keys(data)) {\n    arr.push(name);\n  }\n  return arr.filter((item, index) => index > 1 ? item : null);\n};\n\nexport function planetAttrList(data: any) {\n  let arr = [];\n  for (let atr of Object.entries(data.Attributes)) {\n    arr.push(atr[1]);\n  }\n  return arr;\n}\n\nexport function planetUnitsList(data: any) {\n  let arr = [];\n  for (let units of Object.entries(data.Units)) {\n    arr.push(units[1]);\n  }\n  return arr;\n}\n\n\n\n\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\n\nimport SearchParams from './searchParams';\nimport { planetNames } from '../common/Utils';\nimport planets from '../../assets/planetData.json';\n\nimport './search-bar.style.scss';\n\ninterface searchState {\n  value: string,\n  searchType: string,\n  tabClassName: string,\n  data: object,\n  selectedOption: any,\n}\n\ninterface searchProps {\n  show: any,\n  hide: any,\n  changeSearchState: any,\n  changeParams: any,\n  params: string[],\n  setPlanet: any,\n}\n\nconst options = planetNames(planets).map((item) => {\n  return {value: item, label: item};\n});\n\nconst general: string = 'general';\nconst mass: string = 'mass';\nconst orbits: string = 'orbits';\nconst temp: string = 'temp & tilt';\nconst extra: string = 'extra';\n\nconst searchTypeArr: string[] = [general, mass, orbits, temp, extra];\n\nexport default class SearchBar extends React.Component<searchProps, searchState> {\n  constructor(props: searchProps){\n    super(props);\n\n    this.state = {\n      value: '',\n      searchType: general,\n      tabClassName: '',\n      data: planets,\n      selectedOption: null\n      };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (selectedOption: any) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  handleSubmit = async ( e: React.FormEvent<HTMLFormElement> ): Promise<void> => {\n    e.preventDefault();\n    const { show, changeSearchState, setPlanet } = this.props;\n    const { searchType, selectedOption } = this.state;\n    changeSearchState(searchType);\n    setPlanet(selectedOption)\n    show();\n  }\n\n  handleTabClick = (searchState: string, item: string) => {\n    const { changeSearchState, changeParams } = this.props;\n    changeSearchState(item);\n    changeParams(item);\n    this.setState({ searchType: item });\n    this.setState({ tabClassName: 'active' })\n  }\n\n  displayLabels = () => {\n    const { searchType, tabClassName } = this.state;\n    return searchTypeArr.map((item, index, arr)=> {\n      return <label \n        key={index}\n        className={item === searchType ? tabClassName : ''}\n        htmlFor=\"search__bar\"\n        onClick={this.handleTabClick.bind(this, searchType, item)}\n      >\n        {item}\n      </label>\n    });\n  };\n\n  componentWillMount(){\n    document.addEventListener('mousedown', this.handleClickOutside, false)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClickOutside, false)\n  }\n\n  handleClickOutside = (event: any) => {\n    const domNode = ReactDOM.findDOMNode(this);\n    const { hide } = this.props;\n    if (!domNode || !domNode.contains(event.target)) {\n        hide();\n        this.setState({ selectedOption: null })\n    }\n  }\n\n  render() {\n    const { selectedOption, searchType } = this.state;\n    const { params } = this.props;\n\n    const selectStyles: object = { menu: (styles: object) => ({ ...styles, zIndex: 999, opacity: 1 }) };\n\n    return (\n      <section className=\"search\">\n        <form className=\"search__form\" onSubmit={this.handleSubmit}>\n          <div className=\"search__labels\">\n            {this.displayLabels()}\n          </div>\n          <Select\n            id=\"search__bar\"\n            className=\"search__bar\"\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n            placeholder=\"find your planet...\"\n            style={selectStyles}\n          />\n          <input \n            className=\"search__btn\"\n            type=\"submit\" \n            value=\"Search\"\n          />\n        </form>\n        <SearchParams searchType={searchType} params={params}/>\n      </section>\n    );\n  }\n}","import * as React from 'react';\n\nimport data from '../../assets/planetData.json';\nimport './results-page.style.scss';\n\ninterface resultsProps {\n  resultsVis: boolean,\n  searchState: string,\n  planet: any,\n  params: string[],\n  paramsKey: any,\n  units: string[],\n}\n\nconst ResultsPage: React.FC <resultsProps> = (props) => {\n  const { resultsVis, planet, params, paramsKey, units } = props;\n  const resultsPageStyles = (() => resultsVis ? 'results-page' : 'no-results-page')();\n\n  interface Idata{\n    [key: string]: any,\n  }\n\n  const planetsDisplay = ((data: Idata) => {\n    return paramsKey.map((item: string, index: number) => {     \n      console.log(params[index], ' : ', data[planet][item]);\n      return <div key={item}>\n          {params[index]}: {data[planet][item]} {units[index]}\n        </div>;\n    })\n  })(data);\n\n  return (\n  <section className={resultsPageStyles}>\n    <h2>{planet}</h2>\n    <p>{planetsDisplay}</p>\n  </section>\n);\n  \n}\n\nexport default ResultsPage;","import * as React from 'react';\n\nimport SearchBar from '../SearchBar';\nimport ResultsPage from '../ResultsPage';\nimport { planetAttrList, planetUnitsList } from '../common/Utils';\nimport planets from '../../assets/planetData.json';\n\n\nimport './landing-page.style.scss';\n\ninterface landingState {\n  resultVis: boolean,\n  searchState: string,\n  params: any,\n  planet: string,\n  paramsKey: any,\n  units: any,\n}\n\nclass LandingPage extends React.Component<{}, landingState> {\n  constructor(props: any) {\n    super(props);\n    this.hideResults = this.hideResults.bind(this);\n    this.showResults = this.showResults.bind(this);\n    this.changeSearchState = this.changeSearchState.bind(this);\n    this.changeSearchParams = this.changeSearchParams.bind(this);\n    this.setPlanet = this.setPlanet.bind(this);\n  }\n\n  state = { \n    resultVis: false,\n    searchState: 'general',\n    params: ['Mean distance from the Sun', 'Equatorial radius', 'Surface area', 'Volume'],\n    planet: 'Earth',\n    paramsKey: ['C', 'D', 'E', 'F'],\n    units: ['km', 'km', 'km2', 'km3'],\n  }\n\n  setPlanet(val: any){\n    this.setState({ planet: val.value });\n  }\n\n  showResults(bool: boolean) {\n    this.setState({ resultVis: true });\n  }\n\n  hideResults(bool: boolean) {\n    this.setState({ resultVis: false });\n  }\n\n  changeSearchState(val: string) {\n    this.setState({ searchState: val });\n  }\n\n  changeSearchParams(val: string){\n    const general: string = 'general';\n    const mass: string = 'mass';\n    const orbits: string = 'orbits';\n    const temp: string = 'temp & tilt';\n    const extra: string = 'extra';\n\n    switch(val) {\n      case general: \n        let generalAttr = planetAttrList(planets).filter((item,index) => index < 4);\n        let generalUnits = planetUnitsList(planets).filter((item,index) => index < 4);\n        this.setState({ params: generalAttr, units: generalUnits, paramsKey: ['C', 'D', 'E', 'F'] });\n        break;\n      case mass:\n        let massAttr = planetAttrList(planets).filter((item,index) => index > 3 && index < 8);\n        let massUnits = planetUnitsList(planets).filter((item,index) => index > 3 && index < 8);\n        this.setState({ params: massAttr, units: massUnits, paramsKey: ['G', 'H', 'I', 'J'] });\n        break;\n      case orbits:\n        let orbitsAttr = planetAttrList(planets).filter((item,index) => index > 7 && index < 12);\n        let orbitsUnits = planetUnitsList(planets).filter((item,index) => index > 7 && index < 12);\n        this.setState({ params: orbitsAttr, units: orbitsUnits, paramsKey: ['K', 'L', 'M', 'N'] });\n        break;\n      case temp:\n        let tempAttr = planetAttrList(planets).filter((item,index) => index > 11 && index < 16);\n        let tempUnits = planetUnitsList(planets).filter((item,index) => index > 11 && index < 16);\n        this.setState({ params: tempAttr, units: tempUnits, paramsKey: ['O', 'P', 'Q', 'R'] });\n        break;\n      case extra:\n        let extraAttr = planetAttrList(planets).filter((item,index) => index > 15 && index < 19);\n        let extraUnits = planetUnitsList(planets).filter((item,index) => index > 15 && index < 19);\n        this.setState({ params: extraAttr, units: extraUnits, paramsKey: ['S', 'T', 'U']  });\n        break;\n      default: \n        this.setState({ \n          params: ['Mean distance from the Sun', 'Equatorial radius', 'Surface area', 'Volume'], \n          paramsKey: ['C', 'D', 'E', 'F'],\n          units: ['km', 'km', 'km2', 'km3'],\n          });\n        break;\n    }\n  }\n\n  render(){\n    const { resultVis, searchState, params, paramsKey, planet, units } = this.state;\n    return (\n      <section className=\"landing-page\">\n\n        <h1>Find your place among the stars</h1>\n    \n        <SearchBar \n          hide={this.hideResults} \n          show={this.showResults} \n          changeSearchState={this.changeSearchState} \n          changeParams={this.changeSearchParams}\n          params={params}\n          setPlanet={this.setPlanet}\n        />\n        <ResultsPage \n          resultsVis={resultVis} \n          searchState={searchState} \n          planet={planet}\n          params={params}\n          paramsKey={paramsKey}\n          units={units}\n        />  \n    \n      </section>\n    );\n  }\n  \n};\nexport default LandingPage;","import React from 'react';\nimport Header from '../common/Header';\nimport './App.scss';\nimport LandingPage from '../LandingPage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <LandingPage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}